---
# This script has the databases to be created
- name: Add twitter db
  uri:
    url: http://{{ groups['DB_MASTER_NODE'][0] }}:5984/twitter
    user: '{{ user }}'
    password: '{{ pass }}'
    method: PUT
    status_code: [200, 201]
    return_content: true
    force_basic_auth: yes
  when: ansible_ssh_host == groups['DB_MASTER_NODE'][0]

- name: Add pollutant db
  uri:
    url: http://{{ groups['DB_MASTER_NODE'][0] }}:5984/pollutant
    user: '{{ user }}'
    password: '{{ pass }}'
    method: PUT
    status_code: [200, 201]
    return_content: true
    force_basic_auth: yes
  when: ansible_ssh_host == groups['DB_MASTER_NODE'][0]

- name: Verify db structure
  uri:
    url: http://{{ groups['DB_MASTER_NODE'][0] }}:5984/_all_dbs
    user: '{{ user }}'
    password: '{{ pass }}'
    method: GET
    status_code: [200, 201]
    return_content: true
    force_basic_auth: yes
  register: struct

- ansible.builtin.debug:
    msg: '{{ struct }}'
  when: struct is defined

# - name: Add twitter MapReduce views
#   uri:
#     url: http://{{ groups['DB_MASTER_NODE'][0] }}:5984/twitter/_design/Data
#     user: '{{ user }}'
#     password: '{{ pass }}'
#     method: PUT
#     body: "{\"_id\": \"_design/Data\",\"views\": {\"Data\": {\"reduce\": \"_count\",\"map\": \"function (doc) {\n  var sentiment = doc.sentiment[0];\n  var confidence = doc.sentiment[1];\n  var suburb = doc.suburb;\n  if (sentiment === \"Positive\" && confidence > 0.8 && suburb !== \"\") {\n    emit([suburb, new Date(doc.created_at).getTime()], 1);\n  } else if (sentiment === \"Negative\" && confidence > 0.8 && suburb !== \"\") {\n    emit([suburb, new Date(doc.created_at).getTime()], 0);\n  }\n}\"}},\"language\": \"javascript\"}"
#     body_format: json
#     status_code: 500
#     return_content: true
#     headers:
#       Content-Type: "application/json"
#     force_basic_auth: yes
#   when: ansible_ssh_host == groups['DB_MASTER_NODE'][0]

# - name: Add pollutant MapReduce views
#   uri:
#     url: http://{{ groups['DB_MASTER_NODE'][0] }}:5984/pollutant/_design/Pollution
#     user: '{{ user }}'
#     password: '{{ pass }}'
#     method: PUT
#     body: "{
#               \"_id\": \"_design/Pollution\",
#               \"views\": {
#                   \"Data\": {
#                       \"map\": \"function (doc) {\n  emit(doc._id, {geo: doc.geometry.coordinates, reports: doc.properties.reports});\n}\"
#                   }
#               },
#               \"language\": \"javascript\"
#           }"
#     body_format: json
#     status_code: 500
#     return_content: true
#     headers:
#       Content-Type: "application/json"
#     force_basic_auth: yes
#   when: ansible_ssh_host == groups['DB_MASTER_NODE'][0]