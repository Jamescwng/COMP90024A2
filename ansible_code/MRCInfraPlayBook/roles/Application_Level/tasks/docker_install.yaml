---
###################################################
#   DOCKER DEPENDENCIES on DB Servers
#
# Team 14 - Melbourne

# Kranthi Kumar Kommuri 1049507
# James Ng 1316315
# Emmanuel Pinca 1080088
# Matteo Rossi 1222468
# Thanadol Ultarnpatumros 1323866
###################################################
- name: Install docker dependencies on DB Servers
  become: yes
  ansible.builtin.apt:
    name: ['apt-transport-https', 'ca-certificates', 'lsb-release', 'gnupg', 'software-properties-common', 'virtualenv', 'curl']
    state: latest
    update_cache: true

- name: Add apt sign key on DB Servers
  become: yes
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present

- name: Add docker repo on DB Servers
  become: yes
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install docker on DB Servers
  become: yes
  ansible.builtin.apt:
    name: ['docker', 'docker.io', 'docker-compose', 'docker-registry', 'python3-docker']
    state: latest
    update_cache: true

- name: Get running containers on DB Servers
  become: yes
  docker_host_info:
    containers: yes
  register: docker_info

- name: Stop running containers on DB Servers
  become: yes
  docker_container:
    name: "{{ item }}"
    state: stopped
  loop: "{{ docker_info.containers | map(attribute='Id') | list }}"

- name: Remove stopped docker containers on DB Servers
  become: yes
  shell: |
     docker rm $(docker ps -a -q);
  when: (docker_info.containers | length)  != 0